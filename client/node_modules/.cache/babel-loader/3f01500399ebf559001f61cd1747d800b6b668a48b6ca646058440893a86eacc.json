{"ast":null,"code":"var _jsxFileName = \"/home/teramind/Documents/workspace/webguy/apps/ui/src/store.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst appState = {\n  user: {},\n  token: 'LJyvOV5XPqMQmDCRZzIWTregB6cd2NjhSn471Epxu9itkw3lGsF8bUAoYa0KfH',\n  isLoading: false,\n  isError: false,\n  isDisabled: false,\n  notification: ''\n};\nexport const globalContext = /*#__PURE__*/createContext({\n  state: appState,\n  dispatch: () => null\n});\nconst reducer = (state, payload) => ({\n  ...state,\n  ...payload\n});\nexport const Store = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, appState);\n  return /*#__PURE__*/_jsxDEV(globalContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Store, \"X2Ri5JUmFZGqNIDKBX3WBAedzTQ=\");\n_c = Store;\nvar _c;\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"names":["React","createContext","useReducer","appState","user","token","isLoading","isError","isDisabled","notification","globalContext","state","dispatch","reducer","payload","Store","children"],"sources":["/home/teramind/Documents/workspace/webguy/apps/ui/src/store.tsx"],"sourcesContent":["import React, { Dispatch, createContext, useReducer } from \"react\"\nimport { payloadType, globalState, children } from \"./types\"\n\nconst appState: globalState = {\n    user: {},\n    token: 'LJyvOV5XPqMQmDCRZzIWTregB6cd2NjhSn471Epxu9itkw3lGsF8bUAoYa0KfH',\n    isLoading: false,\n    isError: false,\n    isDisabled: false,\n    notification: ''\n}\n\n\nexport const globalContext = createContext<{state: globalState;\n    dispatch: Dispatch<payloadType>;}>({state:appState, dispatch: () => null})\n\nconst reducer = (state: globalState, payload: payloadType): globalState => ({...state,...payload})\n\nexport const Store = ({ children }:children) => {\n    const [state, dispatch] = useReducer(reducer, appState)\n    \n    return (\n        <globalContext.Provider value={{state, dispatch}}>\n            {children}\n        </globalContext.Provider>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAcC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAAA;AAGlE,MAAMC,QAAqB,GAAG;EAC1BC,IAAI,EAAE,CAAC,CAAC;EACRC,KAAK,EAAE,gEAAgE;EACvEC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE,KAAK;EACdC,UAAU,EAAE,KAAK;EACjBC,YAAY,EAAE;AAClB,CAAC;AAGD,OAAO,MAAMC,aAAa,gBAAGT,aAAa,CACH;EAACU,KAAK,EAACR,QAAQ;EAAES,QAAQ,EAAE,MAAM;AAAI,CAAC,CAAC;AAE9E,MAAMC,OAAO,GAAG,CAACF,KAAkB,EAAEG,OAAoB,MAAmB;EAAC,GAAGH,KAAK;EAAC,GAAGG;AAAO,CAAC,CAAC;AAElG,OAAO,MAAMC,KAAK,GAAG,QAA2B;EAAA;EAAA,IAA1B;IAAEC;EAAkB,CAAC;EACvC,MAAM,CAACL,KAAK,EAAEC,QAAQ,CAAC,GAAGV,UAAU,CAACW,OAAO,EAAEV,QAAQ,CAAC;EAEvD,oBACI,QAAC,aAAa,CAAC,QAAQ;IAAC,KAAK,EAAE;MAACQ,KAAK;MAAEC;IAAQ,CAAE;IAAA,UAC5CI;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAEjC,CAAC;AAAA,GARYD,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}