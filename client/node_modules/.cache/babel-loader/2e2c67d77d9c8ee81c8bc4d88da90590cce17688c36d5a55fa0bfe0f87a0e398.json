{"ast":null,"code":"/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function elementIsOrContains(element, testElement) {\n  return element === testElement || element.contains(testElement);\n}\n/**\n * Gets the active element in the document or shadow root (if an element is provided, and it's in the shadow DOM).\n */\nexport function getActiveElement(element, options) {\n  var _a;\n  if (element == null) {\n    return document.activeElement;\n  }\n  var rootNode = (_a = element.getRootNode(options)) !== null && _a !== void 0 ? _a : document;\n  return rootNode.activeElement;\n}\n/**\n * Throttle an event on an EventTarget by wrapping it in a\n * `requestAnimationFrame` call. Returns the event handler that was bound to\n * given eventName so you can clean up after yourself.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Events/scroll\n */\n/* istanbul ignore next */\nexport function throttleEvent(target, eventName, newEventName) {\n  var throttledFunc = throttleImpl(function (event) {\n    target.dispatchEvent(new CustomEvent(newEventName, event));\n  });\n  target.addEventListener(eventName, throttledFunc);\n  return throttledFunc;\n}\n/**\n * Throttle a callback by wrapping it in a `requestAnimationFrame` call. Returns\n * the throttled function.\n *\n * @see https://www.html5rocks.com/en/tutorials/speed/animations/\n */\nexport function throttleReactEventCallback(callback, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var throttledFunc = throttleImpl(callback, function (event2) {\n    if (options.preventDefault) {\n      event2.preventDefault();\n    }\n  },\n  // prevent React from reclaiming the event object before we reference it\n  function (event2) {\n    return event2.persist();\n  });\n  return throttledFunc;\n}\n/**\n * Throttle a method by wrapping it in a `requestAnimationFrame` call. Returns\n * the throttled function.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function throttle(method) {\n  return throttleImpl(method);\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction throttleImpl(onAnimationFrameRequested, onBeforeIsRunningCheck, onAfterIsRunningCheck) {\n  var isRunning = false;\n  var func = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    onBeforeIsRunningCheck === null || onBeforeIsRunningCheck === void 0 ? void 0 : onBeforeIsRunningCheck.apply(void 0, args);\n    if (isRunning) {\n      return;\n    }\n    isRunning = true;\n    onAfterIsRunningCheck === null || onAfterIsRunningCheck === void 0 ? void 0 : onAfterIsRunningCheck.apply(void 0, args);\n    requestAnimationFrame(function () {\n      onAnimationFrameRequested.apply(void 0, args);\n      isRunning = false;\n    });\n  };\n  return func;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,OAAM,SAAUA,mBAAmB,CAACC,OAAoB,EAAEC,WAAwB;EAC9E,OAAOD,OAAO,KAAKC,WAAW,IAAID,OAAO,CAACE,QAAQ,CAACD,WAAW,CAAC;AACnE;AAEA;;;AAGA,OAAM,SAAUE,gBAAgB,CAACH,OAA4B,EAAEI,OAA4B;;EACvF,IAAIJ,OAAO,IAAI,IAAI,EAAE;IACjB,OAAOK,QAAQ,CAACC,aAAa;;EAGjC,IAAMC,QAAQ,GAAI,aAAO,CAACC,WAAW,CAACJ,OAAO,CAAC,mCAAIC,QAAwC;EAC1F,OAAOE,QAAQ,CAACD,aAAa;AACjC;AAEA;;;;;;;AAOA;AACA,OAAM,SAAUG,aAAa,CAACC,MAAmB,EAAEC,SAAiB,EAAEC,YAAoB;EACtF,IAAMC,aAAa,GAAGC,YAAY,CAAC,UAACC,KAAY;IAC5CL,MAAM,CAACM,aAAa,CAAC,IAAIC,WAAW,CAACL,YAAY,EAAEG,KAAK,CAAC,CAAC;EAC9D,CAAC,CAAC;EACFL,MAAM,CAACQ,gBAAgB,CAACP,SAAS,EAAEE,aAAa,CAAC;EACjD,OAAOA,aAAa;AACxB;AAMA;;;;;;AAMA,OAAM,SAAUM,0BAA0B,CACtCC,QAAgD,EAChDhB,OAAyC;EAAzC;IAAAA,YAAyC;EAAA;EAEzC,IAAMS,aAAa,GAAGC,YAAY,CAC9BM,QAAQ,EACR,UAACC,MAAS;IACN,IAAIjB,OAAO,CAACkB,cAAc,EAAE;MACxBD,MAAM,CAACC,cAAc,EAAE;;EAE/B,CAAC;EACD;EACA,UAACD,MAAS;IAAK,aAAM,CAACE,OAAO,EAAE;EAAhB,CAAgB,CAClC;EACD,OAAOV,aAAa;AACxB;AAEA;;;;AAIA;AACA,OAAM,SAAUW,QAAQ,CAAqBC,MAAS;EAClD,OAAOX,YAAY,CAACW,MAAM,CAAC;AAC/B;AAEA;AACA,SAASX,YAAY,CACjBY,yBAA4B,EAC5BC,sBAA0B,EAC1BC,qBAAyB;EAEzB,IAAIC,SAAS,GAAG,KAAK;EACrB,IAAMC,IAAI,GAAG;IAAC;SAAA,UAAc,EAAdC,qBAAc,EAAdA,IAAc;MAAdC;;IACVL,sBAAsB,aAAtBA,sBAAsB,uBAAtBA,sBAAsB,eAAMK,IAAI,CAAC;IAEjC,IAAIH,SAAS,EAAE;MACX;;IAEJA,SAAS,GAAG,IAAI;IAEhBD,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,eAAMI,IAAI,CAAC;IAEhCC,qBAAqB,CAAC;MAClBP,yBAAyB,eAAIM,IAAI;MACjCH,SAAS,GAAG,KAAK;IACrB,CAAC,CAAC;EACN,CAAC;EACD,OAAOC,IAAgB;AAC3B","names":["elementIsOrContains","element","testElement","contains","getActiveElement","options","document","activeElement","rootNode","getRootNode","throttleEvent","target","eventName","newEventName","throttledFunc","throttleImpl","event","dispatchEvent","CustomEvent","addEventListener","throttleReactEventCallback","callback","event2","preventDefault","persist","throttle","method","onAnimationFrameRequested","onBeforeIsRunningCheck","onAfterIsRunningCheck","isRunning","func","_i","args","requestAnimationFrame"],"sources":["/home/teramind/Documents/workspace/webguy/apps/ui/node_modules/@blueprintjs/core/src/common/utils/domUtils.ts"],"sourcesContent":["/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function elementIsOrContains(element: HTMLElement, testElement: HTMLElement) {\n    return element === testElement || element.contains(testElement);\n}\n\n/**\n * Gets the active element in the document or shadow root (if an element is provided, and it's in the shadow DOM).\n */\nexport function getActiveElement(element?: HTMLElement | null, options?: GetRootNodeOptions) {\n    if (element == null) {\n        return document.activeElement;\n    }\n\n    const rootNode = (element.getRootNode(options) ?? document) as DocumentOrShadowRoot & Node;\n    return rootNode.activeElement;\n}\n\n/**\n * Throttle an event on an EventTarget by wrapping it in a\n * `requestAnimationFrame` call. Returns the event handler that was bound to\n * given eventName so you can clean up after yourself.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Events/scroll\n */\n/* istanbul ignore next */\nexport function throttleEvent(target: EventTarget, eventName: string, newEventName: string) {\n    const throttledFunc = throttleImpl((event: Event) => {\n        target.dispatchEvent(new CustomEvent(newEventName, event));\n    });\n    target.addEventListener(eventName, throttledFunc);\n    return throttledFunc;\n}\n\nexport interface IThrottledReactEventOptions {\n    preventDefault?: boolean;\n}\n\n/**\n * Throttle a callback by wrapping it in a `requestAnimationFrame` call. Returns\n * the throttled function.\n *\n * @see https://www.html5rocks.com/en/tutorials/speed/animations/\n */\nexport function throttleReactEventCallback<E extends React.SyntheticEvent = React.SyntheticEvent>(\n    callback: (event: E, ...otherArgs: any[]) => any,\n    options: IThrottledReactEventOptions = {},\n) {\n    const throttledFunc = throttleImpl(\n        callback,\n        (event2: E) => {\n            if (options.preventDefault) {\n                event2.preventDefault();\n            }\n        },\n        // prevent React from reclaiming the event object before we reference it\n        (event2: E) => event2.persist(),\n    );\n    return throttledFunc;\n}\n\n/**\n * Throttle a method by wrapping it in a `requestAnimationFrame` call. Returns\n * the throttled function.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function throttle<T extends Function>(method: T): T {\n    return throttleImpl(method);\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction throttleImpl<T extends Function>(\n    onAnimationFrameRequested: T,\n    onBeforeIsRunningCheck?: T,\n    onAfterIsRunningCheck?: T,\n) {\n    let isRunning = false;\n    const func = (...args: any[]) => {\n        onBeforeIsRunningCheck?.(...args);\n\n        if (isRunning) {\n            return;\n        }\n        isRunning = true;\n\n        onAfterIsRunningCheck?.(...args);\n\n        requestAnimationFrame(() => {\n            onAnimationFrameRequested(...args);\n            isRunning = false;\n        });\n    };\n    return func as any as T;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}