{"ast":null,"code":"export const encryptData = text => {\n  // plain-text string\n  const str = text;\n\n  // create a buffer\n  const buff = Buffer.from(str, 'utf-8');\n\n  // decode buffer as Base64\n  const base64 = buff.toString('base64');\n\n  // return Base64 string\n  return base64;\n};\nexport const decryptData = text => {\n  // Base64 encoded string\n  const base64 = text;\n\n  // create a buffer\n  const buff = Buffer.from(base64, 'base64');\n\n  // decode buffer as UTF-8\n  const str = buff.toString('utf-8');\n\n  // return normal string\n  return str;\n};","map":{"version":3,"names":["encryptData","text","str","buff","Buffer","from","base64","toString","decryptData"],"sources":["/home/teramind/Documents/workspace/webguy/apps/ui/src/helpers/index.ts"],"sourcesContent":["export const encryptData = (text: string): string => {\n    // plain-text string\n    const str = text;\n\n    // create a buffer\n    const buff = Buffer.from(str, 'utf-8');\n\n    // decode buffer as Base64\n    const base64 = buff.toString('base64');\n\n    // return Base64 string\n    return base64;\n}\n\n\nexport const decryptData = (text: string): string => {\n    // Base64 encoded string\n    const base64 = text;\n\n    // create a buffer\n    const buff = Buffer.from(base64, 'base64');\n\n    // decode buffer as UTF-8\n    const str = buff.toString('utf-8');\n\n    // return normal string\n    return str;\n}"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAIC,IAAY,IAAa;EACjD;EACA,MAAMC,GAAG,GAAGD,IAAI;;EAEhB;EACA,MAAME,IAAI,GAAGC,MAAM,CAACC,IAAI,CAACH,GAAG,EAAE,OAAO,CAAC;;EAEtC;EACA,MAAMI,MAAM,GAAGH,IAAI,CAACI,QAAQ,CAAC,QAAQ,CAAC;;EAEtC;EACA,OAAOD,MAAM;AACjB,CAAC;AAGD,OAAO,MAAME,WAAW,GAAIP,IAAY,IAAa;EACjD;EACA,MAAMK,MAAM,GAAGL,IAAI;;EAEnB;EACA,MAAME,IAAI,GAAGC,MAAM,CAACC,IAAI,CAACC,MAAM,EAAE,QAAQ,CAAC;;EAE1C;EACA,MAAMJ,GAAG,GAAGC,IAAI,CAACI,QAAQ,CAAC,OAAO,CAAC;;EAElC;EACA,OAAOL,GAAG;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}